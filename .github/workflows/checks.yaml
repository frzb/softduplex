---
name: Linting and Tests
on: [push, workflow_dispatch]

jobs:
  lint_and_integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [normal, reverse]
        include:
        - config: normal
          env:
            REVERSE: false
        - config: reverse
          env:
            REVERSE: true
    steps:
      - name: Write current UID to environment
        run: echo "UID=$UID" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error
      - name: Install docker-compose
        run: |
          docker-compose -v ||
           sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
           sudo chmod +x /usr/local/bin/docker-compose
      - name: Install integration test dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pdfminer diffutils pv
      - name: Start softduplex container
        env: ${{matrix.env}}
        run: |
          env
          docker-compose config
          docker-compose up -d
      # Write of the PDF documents by the scanner is not atomic.
      # At first an empty file is created which is filled than with content.
      # The creation of an empty file confuses following processes using this file.
      # To simulate this we first touch a file and then after a while put the full
      # pdf file in place.
      - name: Merge example files
        run: |
          cp -v ./test/input/odd.pdf ./input/odd/
          touch ./input/even/even_${{matrix.config}}.pdf
          file ./input/even/even_${{matrix.config}}.pdf
          sleep 5
          set -x
          source=./test/input/even_${{matrix.config}}.pdf 
          destination=./input/even/even_${{matrix.config}}.pdf
          filesize=$(stat --format %s $source)
          segmentsize=$(($filesize / 2))
          postion=0
          while ! [ "$postion" -ge "1" ]; do
            dd if="$source" skip="$postion" bs="$segmentsize" count=1 >> "$destination" 
            (( postion++ ))
            sleep 5
          done
          set +x
          file ./input/even/even_${{matrix.config}}.pdf
      - name: Verify merged page order
        run: |
          docker-compose logs
          timeout=20
          i=0
          while ! ls output/odd_merged.pdf; do
            echo "Waiting for merged pdf document to be created..."
            if [ $i -ge $timeout ]; then
              echo "Timeout reached"
              exit 1
            fi
            i=$((i+1))
            sleep 1
          done
          diff -y  <(pdf2txt output/odd_merged.pdf) test/reference_output
          rm output/odd_merged.pdf
